swagger: '2.0'
info:
  version: 1.0.1
  title: Florist LLC Order API
  description: >- 
    # Florist LLC. Order API
    
    This is a Good API <http://goodapi.co> demo API.
    
    ## Message Formats
    
    This API uses the following message formats:
    
    - **RESTful JSON** <https://restfuljson.org/>
      
        Every successful response is following the RESTful JSON conventions to communicate the hypermedia links (HATEOAS). Clients are kindly requested to follow provided links instead of harcoding the endpoints URLs.
    
    - **Problem Detail** <https://tools.ietf.org/html/rfc7807>
    
        In the case of a error the Problem Detail `application/problem+json` format is used to communicate the details about the problem.

  contact:
    email: hello@goodapi.co

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
    
securityDefinitions:
   "API Key":
     type: apiKey
     in: header
     name: api-key

security:
  - "API Key": []    

# tags are used for organizing operations
tags:
- name: users
  description: Operations available to all API users
- name: admins
  description: Secured, admin-only calls

paths:
  /:
    get:
      tags:
      - users
      summary: Retrieve API Root.
      description: >-
        Retrieve the API root with initial set of affordances.
      produces:
      - application/json
      responses:
        200:
          description: API root with initial set of affordances
          schema:
            type: object
            example:
              url: /
              ordersUrl: /orders
              createOrderUrl: /orders
              
  /orders:
    get:
      tags:
      - users
      summary: Retrieve List of Orders.
      description: >-
        Retrieve list of orders for authenticated user.
      produces:
      - application/json
      responses:
        200:
          description: List of orders for authenticated user
          schema:
            type: object
            example:
              url: /orders
              createOrderUrl: /orders
              orders:
                - url: /orders/001
                  returnUrl: /orders/001
                  orderStatus: received
                  orderDate: '2020-06-21T14:07:17Z'
                  orderItems: []
                  
                - url: /orders/002
                  cancelUrl: /orders/002
                  orderStatus: pending
                  orderDate: '2020-12-23T22:59:00Z'
                  orderItems: []
                  
                - url: /orders/003
                  orderStatus: shipped
                  orderDate: '2020-12-22T10:00:00Z'
                  orderItems: []
    
    post:
      tags:
      - users
      summary: Create Order.
      description: >- 
        Create a new order for authenticated user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Oder
        description: >- 
          Order Items to be ordered
        schema:
          type: object
          example:
            oderItems:
              - orderItem: Blue Tulip
                orderQuantity: 3
              - orderItem: Red Rose
                orderQuantity: 7
      responses:
        201:
          description: Order created
          schema:
            type: object
            example:
              url: /orders/002
              cancelUrl: /orders/002
              orderStatus: pending
              orderDate: '2020-12-23T22:59:00Z'
              orderItems: 
              - orderItem: Blue Tulip
                orderQuantity: 3
              - orderItem: Red Rose
                orderQuantity: 7              
              
        400:
          description: Invalid input parameters

  /orders/{orderId}:
    parameters:
    - in: path
      name: orderId
      description: Id of the Order
      required: true
      type: string
      x-example: '001'  
    get:
      tags:
      - users
      summary: Retrieve Order.
      description: >-
        Retrieve list of orders for authenticated user.
      produces:
      - application/json
      responses:
        200:
          description: List of orders for authenticated user
          schema:
            type: object
            example:
              url: /orders/001
              returnUrl: /orders/001
              orderStatus: received
              orderDate: '2020-06-21T14:07:17Z'
              orderItems:
              - orderItem: White Tulip
                orderQuantity: 1
              - orderItem: Yellow Tulip
                orderQuantity: 2
                
        404:
          description: Order Not Found
          schema:
            type: object
            example:
              type: http://florist.com/problems/order-not-found
              title: Order Not Found
              detail: Order with given Order Id was not found.
              instance: /orders/0007
    patch:
      tags:
      - users
      summary: Cancel or Return Order
      description: >- 
        Depending on the state of the order you may return a received order or cancel an order that has not been shipped yet.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: statusUpdate
        description: >-
          Set orderStatus to `returned` to return an order or to `cancelled` to cancel an order
        schema:
          type: object
          properties:
            orderStatus: 
              type: string
              enum: 
                - returned
                - cancelled
          required: 
            - orderStatus
          example: 
            orderStatus: cancelled
      responses:
        200:
          description: Updated Order Status
          schema:
            type: object
            example:
              url: /orders/002
              orderStatus: cancelled
              orderDate: '2020-12-23T22:59:00Z'
              orderItems: 
              - orderItem: Blue Tulip
                orderQuantity: 3
              - orderItem: Red Rose
                orderQuantity: 7          
          
        400:
          description: Invalid input.

# No Definitions
definitions: {}
